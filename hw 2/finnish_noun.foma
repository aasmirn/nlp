# определяются финские буковки
define Consonant b | c | d | f | g | h | j | k | l | m | n | p | q | r | s | t | v | w | x | z ;
define FrontVowel ä | ö | y ;
define NeutralVowel e | i ;
define BackVowel a | o | u ;
define Vowel FrontVowel | NeutralVowel | BackVowel | A | E ;
define Letter Vowel | Consonant;

# определяются падежи и числа
define Case "+Nom" | "+Gen" | "+Part" | "+In" | "+All" | "+Ade" | "+Abl" | "+Ill" | "+Ela" ;
define Number "+Sg" | "+Pl" ; 

# определяются типы основ
define FrontStem [Consonant* [ FrontVowel | NeutralVowel ] ]+ Consonant*;
define BackStem [Consonant* [ BackVowel | NeutralVowel ] ]* [Consonant* BackVowel] [Consonant* [ BackVowel | NeutralVowel ] ]* Consonant*;
define Stem Letter+;

define Input Stem Number Case;

# правило про номинатив
define NomPl "+Pl" "+Nom" -> "^" t || _ ;
define NomSg "+Sg" "+Nom" -> "^" || _ ;
define Nominatives NomPl .o. NomSg ;

# правило про генитив
define GenDen "+Gen" -> d e n || Vowel Vowel "+Pl" _ ;
define Gen "+Gen" -> E n || _ ;
define Genetive GenDen .o. Gen ;

# правило про партитив и локативные падежи
define PartTa "+Part" -> t A || [ Consonant Vowel Vowel | Consonant ] Number _ ;
define PartA "+Part" -> A || _ ;

define LocativeCases "+In" -> s s A , "+All" -> l l e, "+Ade" -> l l A, "+Ela" -> s t A  , "+Abl" -> l t A         || _ ;

# правило для иллатива многосложной основы с долгим гласным
define IllativeSiin "+Ill" -> s i i n || Consonant Vowel+ Consonant+ Vowel Vowel "+Pl" _ ;
define IllativeSeen "+Ill" -> s e e n || Consonant Vowel+ Consonant+ Vowel Vowel "+Sg" _ ;
#правило для остального иллатива
define IllativeHVn "+Ill" -> h V n || _ ;

define OtherCases PartTa .o. PartA .o. LocativeCases .o. IllativeSiin .o. IllativeSeen .o. IllativeHVn ;

# множественное число добавить (единственное тоже)
define Sg "+Sg" -> "^" || _ ;
define OmitA ä -> 0, i -> 0 || _ "+Pl";
define Ai2Oi a -> o || [ a | e | i ] Vowel* Consonant+ _ "+Pl";
define Ai2i a -> 0 || [ o | u ] Vowel* Consonant+ _ "+Pl";
define OmitFirst Vowel -> 0 || _ Vowel "+Pl" Consonant;
define Pl "+Pl" -> "^" i || _ ;

define NumberInfl Sg .o. OmitA .o. Ai2i .o. Ai2Oi .o. OmitFirst .o. Pl ;

# это фонетика всякая
define JotPl i -> j || Vowel "^"* _ "^"* Vowel ;
define HarmonyBack A -> a || BackStem "^" Letter* _;
define HarmonyFront A -> ä || FrontStem "^" Letter* _;

#заменяет V на гласный как перед h
define V2a V -> a || a "^"* h _ ;
define V2o V -> o || o "^"* h _ ;
define V2u V -> u || u "^"* h _ ;
define V2i V -> i || i "^"* h _ ;
define V2e V -> e || e "^"* h _ ;
define V2y V -> y || y "^"* h _ ;
define V2ä V -> ä || ä "^"* h _ ;
define V2ö V -> ö || ö "^"* h _ ;
define KillH h -> 0 || Consonant Vowel "^" _ ;

define Phonetics JotPl .o. HarmonyBack .o. HarmonyFront .o. V2a .o. V2o .o. V2u .o. V2i .o. V2e .o. V2y .o. V2ä .o. V2ö .o. KillH;

# это чередования
define DoublePTK p p -> p , t t -> t , k k -> k || Letter _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ;
define SingleP p -> v || Vowel _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ;
define SingleTK t -> d , k -> 0 || Letter _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ; 
define TwoLetter m p -> m m , n t -> n n , n k -> n g , l t -> l l , r t -> r r || Letter _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ;
define ThreeLetter l k e -> l j e , r k e -> r j e , h k e -> h j e , u k u -> u v u || Letter _ "^"* Consonant [ .#. | Consonant ] ;
define N2M i n -> i m , t ö n -> t t ö m || _ "^" Vowel;
define EOmit E -> 0 || Vowel "^" _;
define EReal E -> e || _;

define Alternations N2M  .o. EOmit .o. EReal .o. ThreeLetter .o. TwoLetter .o. SingleP .o. SingleTK .o. DoublePTK ;

# оно всё объединяет
define Affixes Nominatives .o. Genetive .o. OtherCases .o. NumberInfl .o. Alternations .o. Phonetics;

# убирает крышечку чтобы её не было
define Cleanup "^" -> 0 || _ ;

# оно совсем всё объединяет
define Grammar Input .o. Affixes .o. Cleanup ;
push Grammar
